---
import { ClientRouter } from 'astro:transitions';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/base.css';

interface Props {
  title: string;
  isTransparent?: boolean;
}

const { title, isTransparent = false } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ClientRouter fallback="swap" />
  </head>
  <body class="pt-16 font-serif">
    <Header isTransparent={isTransparent} />
    <main class="max-w-7xl mx-auto px-4 py-16">
      <slot />
    </main>
    

    <script>
      function initMenu() {
        const menuButton = document.getElementById('menuButton');
        const closeMenu = document.getElementById('closeMenu');
        const menu = document.getElementById('menu');
        const menuLinks = menu?.querySelectorAll('a');

        menuButton?.addEventListener('click', () => {
          menu?.classList.remove('-translate-x-full');
          document.body.style.overflow = 'hidden';
        });

        closeMenu?.addEventListener('click', () => {
          menu?.classList.add('-translate-x-full');
          document.body.style.overflow = '';
        });

        // Cerrar el menú cuando se hace clic en un enlace
        menuLinks?.forEach(link => {
          link.addEventListener('click', () => {
            menu?.classList.add('-translate-x-full');
            document.body.style.overflow = '';
          });
        });
      }

      // Inicializar el menú cuando la página carga
      document.addEventListener('DOMContentLoaded', initMenu);

      // Reinicializar el menú después de cada navegación
      document.addEventListener('astro:page-load', initMenu);
    </script>
  </body>
</html>

<style>
  /* Animaciones personalizadas */
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation: none;
    mix-blend-mode: normal;
  }

  /* Asegurarse que el contenido sea visible durante las transiciones */
  ::view-transition-old(root) {
    opacity: 0;
  }
  ::view-transition-new(root) {
    opacity: 1;
  }

  /* Animación de desvanecimiento */
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes fade-out {
    from { opacity: 1; }
    to { opacity: 0; }
  }

  /* Animación de deslizamiento */
  @keyframes slide-from-right {
    from { transform: translateX(30px); }
  }

  @keyframes slide-to-left {
    to { transform: translateX(-30px); }
  }
</style> 